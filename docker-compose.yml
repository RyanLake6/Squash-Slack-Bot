version: "3.7"

services:
  db:
    container_name: "slack_bot_db"
    image: mysql:latest
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - "3307:3306"
    # setting some env vars to create the DB
    environment:
      MYSQL_ROOT_PASSWORD: your_root_password_here # Set your desired root password here
      MYSQL_DATABASE: my_database
      MYSQL_USER: my_user
      MYSQL_PASSWORD: my_password

    # mounting a data volume to make sure we don't lose data / initialize correctly
    volumes:
      - ./InitializeSQL:/docker-entrypoint-initdb.d

  bot:
    container_name: "slack_bot"
    # we want to use the image which is build from our Dockerfile
    build:
      context: .
      dockerfile: bot.Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    # depending on the sql backend before spinning up
    depends_on:
      - db
    # We mount the working dir into the container, handy for development
    # This is what makes the hot reloading work inside of a Docker container
    volumes:
      - .:/app/
    stdin_open: true
    tty: true
    # command: ["./wait-for-db.sh", "db", "3306", "--", "/squash/slack/bot"]
